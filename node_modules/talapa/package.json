{
  "name": "talapa",
  "version": "0.3.8",
  "description": "a clean html preprocessor",
  "main": "./lib/main.js",
  "directories": {
    "doc": "doc",
    "example": "example"
  },
  "dependencies": {
    "marked": "^0.3.2",
    "node-sass": "^2.0.0-beta"
  },
  "devDependencies": {
    "coffee-script": "^1.8.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "bin": {
    "talapa": "./bin/index.js"
  },
  "keywords": [
    "html",
    "preprocessor"
  ],
  "author": {
    "name": "Anthony Dellinger",
    "email": "dibillilia@gmail.com",
    "url": "http://www.talapa.info"
  },
  "license": "ISC",
  "readme": "Don't read this, don't use this. It's not done yet. But if you're curious, here's a very rough draft:\r\n\r\n#Talapa Syntax\r\n\t\r\n\thtml\r\n\thead\r\n\t\ttitle                           //this means the \r\n\t\t\tHello!                      //same as\r\n\t\ttitle - Hello!                  //this\r\n\tbody\r\n\t\th1 attribute='foo' - Hello\r\n\r\nSo yeah. No tags. Any indented word that's a valid tag is turned into a nested tag. A normal word or a tag with a backtick in front of it isn't changed. A dash will nest something. Anything before a dash after a tag becomes an attribute. \r\n\r\nSome fancy tabbing and common attribute abbreviations:\r\n\t\r\n\tdiv  //notice the double tab in? That is all compressed into one line.\r\n\t\t\t.class\r\n\t\t\t#id\r\n\t\t\t--prepends_data\r\n\r\nThat's valid, by the way. You don't need html or head or anything.\r\n\r\nMore than one language\r\n\t\r\n\thtml   ///triple slashes are saved as <!--yourComment-->\r\n\tsass  \r\n\t\tbody{\r\n\t\t\ta{\r\n\t\t\t\tblah: foo;\r\n\t\t\t}\r\n\t\t}\r\n\tcss\r\n\t\tew. why?\r\n\t\r\n\thead //yeah. Style GOES BEFORE THE HEAD. \r\n\t\t//did I mention that talapa automatically sets the charset to utf-8 and uses an HTML5 doctype. You can't change that.\r\n\t\tcoffeescript\r\n\t\t\talert 'hey, coffescript'\r\n\t\tjavascript\r\n\t\t\tmeh\r\n\t\r\n\tbody\r\n\t\tmarkdown\r\n\t\t\t#markdown \r\n\t\t\t**Whooooo**\r\n\t\tescape\r\n\t\t\tthis just means don't compile this part. It's a pretty dumb feature.\r\n\r\nTalapa also has a nifty include feature. Lets say I need jQuery:\r\n\t\r\n\thtml\r\n\tinclude jQuery2, angulARJS   //caps don't matter\r\n\thead\r\n\t\t//talapa just added <script src=whatever jquery is></script>, <script src=whatever angular is></script>\r\n\r\nSo Talapa has this giant directory of urls taken from cdnjs and Google Hosted Libraries, from like a month ago. It's probably out of date by now, but you can just point to the url if your library is missing, either locally or whatever you call an actual url. You can see all the urls by peeking at /lib/inclusions.js. I should make this easier, probably. \r\n\t\r\n\tinclude www.google.com/jquery.js  //why isn't this the url? much simpler. \r\n\r\nThis also makes it a lot easier to point to any stylesheets, scripts, or a favicon.\r\n\t\r\n\tinclude stylsheet.css, script.js, favicon.ico, jquery1\r\n\r\nSo Talapa is smart enough to parse that into valid scripts and links\r\n\r\nTalapa also has variables. This is a stupid, useless feature.\r\n\t\r\n\thtml\r\n\tvars ?turtle - SuperLongCompanyNameYouDon-tWantToTypeBecauseSeriouslyWhyWouldYouNameYourCompanyThis,, \r\n\t\t\t?puncuationDoesn'tMatter -  see? I, can put S%-!\\//whatever I want, just not two commas\r\n\tbody\r\n\t\t?turtle ?puncuationDoesn'tMatter\r\n\r\nTalapa also has templates.\r\n\t\r\n\thtml\r\n\tdef %post\r\n\t\th1 - @title\r\n\t\tdiv #postWrapper\r\n\t\t\t@content\r\n\tbody\r\n\t\t%post\r\n\t\t\t@title - avacado\r\n\t\t\t@content\r\n\t\t\t\tp\r\n\t\t\t\t\tonce upon a time there was a very \r\n\t\t\t\t\tnice lady named Wilfred\r\n\t\t\t\tp\r\n\t\t\t\t\tshe liked cats. She had them everywhere.\r\n\r\nSo I define a template with def, make sure to start its name with a %, and then put talapa code in its indent. Anything I want to be user defined starts with an @. Don't use variables. When I call the template, I make a newline, type the template name, then pass values for everything I want. It's okay to not pass a value, Talapa will just keep the @valueName.\r\n\r\nWe can read templates and/or variables from other files\r\n\t\r\n\tread templates from ./templates\r\n\tread variables from ./whywouldyoudothis\r\n\tread templates and variables from ./file\r\n\r\nThings are read procedurally. If I try to define a template twice, the last template wins.\r\n\r\nSvg tags are not treated as tags unless in an svg block. HTML tags are not tags in an svg block.\r\n\t\r\n\tsvg\r\n\t\tsvg tags\r\n\t\tyeah\r\n\t\tno html tags\r\n\r\n#Compiling files\r\nTalapa is added to your path as talapa. \r\n\r\nTalapa can change files one at a time.\r\n\t\r\n\ttalapa ./whatever.talapa ./whatever.html\r\n\ttalapa ./style.sass ./style.css\r\n\ttalapa ./README.md ./youCanTurnItIntoWhateverYouWant.docx\r\n\t\r\nTalapa can compile one directory into another directory, or itself. It will preserve the file architecture. \r\n\t\r\n\ttalapa ./development ./production\r\n\ttalapa ./website ./website\r\n\r\n-xs, -xc, and -xm will prevent it from compiling sass, coffeescript, and or markdown. -p prints to the console.\r\n\r\nwe can also watch files\r\n\t\r\n\ttalapa ./whatever.talapa ./whatever.html -wf\r\n\t\r\nwe can also watch directories. \r\n\t\r\n\ttalapa ./development ./production\r\nThis is fired whenever you save a file. It won't work on new files, renamed files, or new directorys.",
  "readmeFilename": "README.md",
  "_id": "talapa@0.3.8",
  "_shasum": "0950244c1ab2b21b98dcf190abf0d04c9f041c70",
  "_resolved": "talapa-0.3.8.tgz",
  "_from": "talapa-0.3.8.tgz"
}
